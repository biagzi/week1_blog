data = data,
family = binomial(link="logit"),
bin_amount_transport ~ 1
)
fit_intercept %>%
tidy() %>%
kable()
conf_interval <- confint(fit_intercept, level = 0.95)
conf_interval
b0 <- coef(fit_intercept) # get coef
exp(b0) / (1 + exp(b0)) # logistic transform
exp(conf_interval) / (1 + exp(conf_interval)) # logistic transform
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
b0 <- coef(model_demographic)[1] %>% as.double()
b1 <- coef(model_demographic)[2] %>% as.double()
b2 <- coef(model_demographic)[3] %>% as.double()
b3 <- coef(model_demographic)[4] %>% as.double()
# Man
plogis(b0 + b1 + b2*1 + b3)
# Women
plogis(b0 + b1 + b2*0 + b3)
emm <- emmeans(model_demographic, "sex", type = "response")
emm
# get odd ratio for comparison
pairs(emm, reverse=TRUE)
b2
exp(b2)
b3
exp(b3)
avg_slopes(model_demographic)%>%kable()
fit2 <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
fit3 <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10 + polviews,
)
levels <- c("(Intercept)", "age", "sex", "sei10", "polviews")
bind_rows(
tidy(fit2, conf.int = TRUE) %>% mutate(fit = "fit2"),
tidy(fit3, conf.int = TRUE) %>% mutate(fit = "fit3"),
) %>%
mutate(term = factor(term, levels = levels)) %>%
ggplot(aes(x = estimate, xmin = conf.low, xmax = conf.high, y = 0)) +
geom_vline(xintercept = 0, size = 1/2, linetype = 2, color = "grey50") +
geom_pointrange(fatten = 3) +
scale_y_continuous(NULL, breaks = NULL) +
labs(title = "Coefficient plot",
x = "log-odds scale") +
theme(strip.text.y = element_text(angle = 0)) +
facet_grid(fit ~ term, scales = "free_x")
test_likelihoodratio(fit2, fit3) %>% kable()
model <- glm(bin_amount_transport ~ 1 + polviews + age + sex + sei10, data = data, family = binomial)
sex_prob <- ggpredict(model, terms = c("sex"), type = "fixed")
sei10_prob <- ggpredict(model, terms = c("sei10"), type = "fixed")
polviews_prob <- ggpredict(model, terms = c("polviews"), type = "fixed")
age_prob <- ggpredict(model, terms = c("age"), type = "fixed")
plot(polviews_prob) +
labs(title = "Relationship between Political Views and Attitude towards Spending on Mass Transportation",
x = "Political Views",
y = "Predicted Probability") +
theme_minimal()
plot(sex_prob) +
labs(title = "Relationship between Sex and Attitude towards Spending on Mass Transportation",
x = "Sex",
y = "Predicted Probability") +
theme_minimal()
plot(sei10_prob) +
labs(title = "Relationship between SES and Attitude towards Spending on Mass Transportation",
x = "SES",
y = "Predicted Probability") +
theme_minimal()
plot(age_prob) +
labs(title = "Relationship between age and Attitude towards Spending on Mass Transportation",
x = "age",
y = "Predicted Probability") +
theme_minimal()
r2_mcfadden(fit3)
binnedplot(fitted(fit3), residuals(fit3, type="response"))
check_model(fit3, check=c("binned_residuals", "multicollinearity", "vif"))
check_model(fit3, check=c("binned_residuals", "outliers", "vif"))
performance::binned_residuals(fit3)
binned_residuals(fit3, term="sei10") %>% plot(show_dots=TRUE)
#polviews + age + sex + sei10
fit3 %>%
modelsummary()
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
confint(model_demographic, level = 0.95)
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
model_demographic %>%
tidy(exponentiate = FALSE) %>%
kable()
confint(model_demographic, level = 0.95)
exp(-0.2557070) / (1 + exp(-0.2557070))
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
model_demographic %>%
tidy(exponentiate = FALSE) %>%
kable()
confint(model_demographic, level = 0.95)
a = exp(-0.2557070) / (1 + exp(-0.2557070))
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
model_demographic %>%
tidy(exponentiate = FALSE) %>%
kable()
confint(model_demographic, level = 0.95)
a = exp(-0.2557070) / (1 + exp(-0.2557070))
print(a)
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
model_demographic %>%
tidy(exponentiate = FALSE) %>%
kable()
confint(model_demographic, level = 0.95)
a = exp(-0.2557070)
print(a)
model_demographic <- glm(
data = data,
family = binomial,
bin_amount_transport ~ 1 + age + sex + sei10,
)
model_demographic %>%
tidy(exponentiate = TRUE) %>%
kable()
b0 <- coef(model_demographic)[1] %>% as.double()
b1 <- coef(model_demographic)[2] %>% as.double()
b2 <- coef(model_demographic)[3] %>% as.double()
b3 <- coef(model_demographic)[4] %>% as.double()
# Man
plogis(b0 + b1 + b2*1 + b3)
# Women
plogis(b0 + b1 + b2*0 + b3)
emm <- emmeans(model_demographic, "sex", type = "response")
emm
# get odd ratio for comparison
pairs(emm, reverse=TRUE)
confint(emm)
b0 <- coef(model_demographic)[1] %>% as.double()
b1 <- coef(model_demographic)[2] %>% as.double()
b2 <- coef(model_demographic)[3] %>% as.double()
b3 <- coef(model_demographic)[4] %>% as.double()
# Man
plogis(b0 + b1 + b2*1 + b3)
# Women
plogis(b0 + b1 + b2*0 + b3)
emm <- emmeans(model_demographic, "sex", type = "response")
emm
# get odd ratio for comparison
emmp = pairs(emm, reverse=TRUE)
emmp
confint(emmp)
fit3 %>%
modelsummary()
confint(fit3)
b2
exp(b2)
emm <- emmeans(model_demographic, "age", type = "response")
b2
exp(b2)
emm <- emmeans(model_demographic, "age", type = "response")
emmp = pairs(emm, reverse=TRUE)
b2
exp(b2)
emm <- emmeans(model_demographic, "age", type = "response")
emmp = pairs(emm, reverse=TRUE)
confint(emmp)
b2
exp(b2)
emm <- emmeans(model_demographic, "age")
emmp = pairs(emm, reverse=TRUE)
confint(emmp)
b2
exp(b2)
confint(model_demographic)
b2
exp(b2)
confint(exp(model_demographic))
b2
exp(b2)
confint(model_demographic)
b2
exp(b2)
exp(confint(model_demographic))
b2
exp(b2)
confint(model_demographic)
b2
exp(b2)
fit3 %>%
modelsummary()
confint(fit3)
avg_slopes(model_demographic)%>%kable()
fit3 %>%
modelsummary()
confint(fit3)
avg_slopes(model_demographic)%>%kable()
exp(0.0071934)
fit3 %>%
modelsummary()
confint(fit3)
avg_slopes(model_demographic)%>%kable()
library(ggeffects)
model <- glm(bin_amount_transport ~ 1 + polviews + age + sex + sei10, data = data, family = binomial)
sex_prob <- ggpredict(model, terms = c("sex"), type = "fixed")
sei10_prob <- ggpredict(model, terms = c("sei10"), type = "fixed")
polviews_prob <- ggpredict(model, terms = c("polviews"), type = "fixed")
age_prob <- ggpredict(model, terms = c("age"), type = "fixed")
plot(polviews_prob) +
labs(title = "Relationship between Political Views and Attitude towards Spending on Mass Transportation",
x = "Political Views",
y = "Predicted Probability") +
theme_minimal()
plot(sex_prob) +
labs(title = "Relationship between Sex and Attitude towards Spending on Mass Transportation",
x = "Sex",
y = "Predicted Probability") +
theme_minimal()
plot(sei10_prob) +
labs(title = "Relationship between SES and Attitude towards Spending on Mass Transportation",
x = "SES",
y = "Predicted Probability") +
theme_minimal()
plot(age_prob) +
labs(title = "Relationship between age and Attitude towards Spending on Mass Transportation",
x = "age",
y = "Predicted Probability") +
theme_minimal()
b1
exp(b1)
b2
exp(b2)
b1
exp(b1)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
library(rstan)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
library(rstan)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
skimr::skim(iris)
df = skimr::skim(iris)
df
df = skimr::skim(iris)
summary(df)
df = skimr::skim(iris)
describe(df)
df = skimr::skim(iris)
help(df)
library(datasets)
data(iris)
summary(iris)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 2, fill = "pink", color = "black") +
labs(title = "Sepal.Length X Sepal.Width", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = female)) +
geom_bar(fill = "pink", color = "black") +
labs(title = "Gender Distribution", x = "Gender", y = "Count")
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Length X Sepal.Width", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = female)) +
geom_bar(fill = "pink", color = "black") +
labs(title = "Gender Distribution", x = "Gender", y = "Count")
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Length Distribution", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Width Distribution", x = "Sepal.Width", y = "Frequency")
ggplot(iris, aes(x = Petal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Length Distribution", x = "Petal.Length", y = "Frequency")
ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Width Distribution", x = "Petal.Width", y = "Frequency")
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
chains=2, # how many chains are run
iter = 100) # number of MCMC samples
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=2, # how many chains are run
iter = 500) # number of MCMC samples
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=2, # how many chains are run
iter = 500) # number of MCMC samples
summary(model)
posterior_summary(model)
pp_check(model, ndraws=1000)
pp_check(model)
pp_check(model, ndraws=100)
plot(model)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
summary(model)
summary(model)
pp_check(model, ndraws=100)
model <- brm(formula = Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
iris$Species <- ifelse(iris$Species == "setosa", 1,iris$Species)
iris$Species <- ifelse(iris$Species == "versicolor", 2,iris$Species)
iris$Species <- ifelse(iris$Species == "virginica", 3,iris$Species)
data(iris)
summary(iris)
iris$Species <- ifelse(iris$Species == "setosa", 1,iris$Species)
iris$Species <- ifelse(iris$Species == "versicolor", 2,iris$Species)
iris$Species <- ifelse(iris$Species == "virginica", 3,iris$Species)
summary(iris)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Length Distribution", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Width Distribution", x = "Sepal.Width", y = "Frequency")
ggplot(iris, aes(x = Petal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Length Distribution", x = "Petal.Length", y = "Frequency")
ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Width Distribution", x = "Petal.Width", y = "Frequency")
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b) #set normal prior on regression coefficients (mean of 0, location of 3)
model <- brm(formula = Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
library(datasets) #to open the dataset
library(rstan)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
data(iris)
summary(iris)
data(iris)
summary(iris)
library(datasets) #to open the dataset
library(rstan)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
data(iris)
summary(iris)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Length Distribution", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Width Distribution", x = "Sepal.Width", y = "Frequency")
ggplot(iris, aes(x = Petal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Length Distribution", x = "Petal.Length", y = "Frequency")
ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Width Distribution", x = "Petal.Width", y = "Frequency")
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b) #set normal prior on regression coefficients (mean of 0, location of 3)
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b) #set normal prior on regression coefficients (mean of 0, location of 3)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
summary(model)
pp_check(model, ndraws=100)
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b) #set normal prior on regression coefficients (mean of 0, location of 3)
prior <- prior(cauchy(0, .707), class=b)
#prior2 <- prior(normal(0, 5), class = b)
#prior3 <- prior(normal(0, .51), class = b)
model <- brm(formula = Petal.Length ~ Sepal.Length + Sepal.Width,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
summary(model)
pp_check(model, ndraws=100)
# Specifying our prior distribution
prior <- brms::prior(normal(0, 10), class=b) #set normal prior on regression coefficients (mean of 0, location of 3)
#prior <- prior(cauchy(0, .707), class=b)
#prior2 <- prior(normal(0, 5), class = b)
#prior3 <- prior(normal(0, .51), class = b)
model <- brm(formula = Sepal.Width ~ Sepal.Length + Petal.Length,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
model <- brm(formula = Sepal.Width ~ Sepal.Length + Petal.Length,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
summary(model)
pp_check(model, ndraws=100)
# Specifying our prior distribution
prior <- brms::prior(normal(3, 2), class=b) #set normal prior on regression coefficients (mean of 0,std 10)
model <- brm(formula = Sepal.Width ~ Sepal.Length + Petal.Length,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
library(datasets) #to open the dataset
library(rstan)
library(brms)
library(psych) #to summary statistics
library(tidyverse) # for data manipulation and plotting
data(iris)
summary(iris)
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Length Distribution", x = "Sepal.Length", y = "Frequency")
ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Sepal.Width Distribution", x = "Sepal.Width", y = "Frequency")
ggplot(iris, aes(x = Petal.Length)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Length Distribution", x = "Petal.Length", y = "Frequency")
ggplot(iris, aes(x = Petal.Width)) +
geom_histogram(binwidth = 0.1, fill = "pink", color = "black") +
labs(title = "Petal.Width Distribution", x = "Petal.Width", y = "Frequency")
# Specifying our prior distribution
prior <- brms::prior(normal(3, 2), class=b) #set normal prior on regression coefficients (mean of 0,std 10)
model <- brm(formula = Sepal.Width ~ Sepal.Length + Petal.Length,
data    = iris,
seed    = 123,
prior = prior,
chains=4, # how many chains are run
iter = 500) # number of MCMC samples
plot(model)
summary(model)
pp_check(model, ndraws=100)
